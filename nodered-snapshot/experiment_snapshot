[{"id":"e672cd30.b10e8","type":"tab","label":"INDEX","disabled":false,"info":""},{"id":"2d98046b.f3fb14","type":"tab","label":"E1","disabled":false,"info":""},{"id":"d1ed293e.94fbb8","type":"tab","label":"E2","disabled":false,"info":""},{"id":"2efdae27.c34342","type":"tab","label":"E3","disabled":false,"info":""},{"id":"558ade02.8ece5","type":"tab","label":"E4","disabled":false,"info":""},{"id":"11155a50.40b31e","type":"tab","label":"E5","disabled":false,"info":""},{"id":"fa80adc1.47bc4","type":"tab","label":"E6","disabled":false,"info":""},{"id":"e9910dde.d898e","type":"subflow","name":"init assistant","info":"","category":"telegram","in":[{"x":260,"y":440,"wires":[{"id":"cc01eebd.82c29"}]}],"out":[{"x":636.8571472167969,"y":491.28571796417236,"wires":[{"id":"9c82efab.01a55","port":0}]}],"icon":"node-red-node-watson/conversation-v1-25x25.png"},{"id":"7f31ef56.29851","type":"subflow","name":"speak","info":"","category":"telegram","in":[{"x":234.99998664855957,"y":296.66664695739746,"wires":[{"id":"ccbd845c.ded9d8"}]}],"out":[],"icon":"node-red-node-watson/text_to_speech.png"},{"id":"620afc57.13b67c","type":"subflow","name":"visualrec","info":"This node performs visual recognition on a photo sent to Telegram bot.\n\nInput: msg.payload.type: photo\n\nOutput: ready to Telegram speak node","category":"telegram","in":[{"x":151.66666316986084,"y":164.99999046325684,"wires":[{"id":"44d5fbb.9d44b84"}]}],"out":[{"x":1073.3332996368408,"y":254.99998092651367,"wires":[{"id":"610f1107.32c68","port":0}]}],"icon":"node-red-node-watson/VR-v3-pink.png"},{"id":"dbab4441.ee92f8","type":"subflow","name":"out assistant","info":"","category":"telegram","in":[{"x":580,"y":540,"wires":[{"id":"4b0ffb59.1d7024"},{"id":"217caab6.78da36"}]}],"out":[{"x":1220,"y":540,"wires":[{"id":"217caab6.78da36","port":0}]}],"icon":"node-red-node-watson/conversation-v1-25x25.png"},{"id":"5a465d72.6e6504","type":"cloudant","z":"","host":"https://dce906a0-1c65-4bb1-8d55-29b9c0d3245f-bluemix.cloudant.com","name":"DB IBM Cloud"},{"id":"5c97dfac.66c92","type":"telegram bot","z":"","botname":"OnlineShopAssistant_Bot","usernames":"","chatids":"","baseapiurl":"","pollinterval":"300"},{"id":"4f5fa6e5.1495d","type":"telegram bot","z":"","botname":"OnlineShopAssistant_Bot","usernames":"","chatids":"","baseapiurl":"","pollinterval":"300"},{"id":"92397d45.56eb2","type":"telegram bot","z":"","botname":"OnlineShopAssistant_Bot","usernames":"","chatids":"","baseapiurl":"","pollinterval":"300"},{"id":"81eb50ff.27d348","type":"telegram bot","z":"","botname":"OnlineShopAssistant_Bot","usernames":"","chatids":"","baseapiurl":"","pollinterval":"300"},{"id":"8de822b2.6634c8","type":"telegram bot","z":"","botname":"OnlineShopAssistant_Bot","usernames":"","chatids":"","baseapiurl":"","pollinterval":"300"},{"id":"75d15fe4.47781","type":"telegram bot","z":"","botname":"OnlineShopAssistant_Bot","usernames":"","chatids":"","baseapiurl":"","pollinterval":"300"},{"id":"fd083a56.b1bd6","type":"telegram bot","z":"","botname":"WatsonChatBot","usernames":"","chatids":"","baseapiurl":"","pollinterval":"300"},{"id":"789d4fde.ff31f8","type":"comment","z":"d1ed293e.94fbb8","name":"","info":"how to use Google Vision API\nhttps://cloud.google.com/vision/docs/request#json_request_format","x":80,"y":40,"wires":[]},{"id":"d60bbe56.64b0d","type":"visual-recognition-v3","z":"d1ed293e.94fbb8","name":"","vr-service-endpoint":"https://gateway.watsonplatform.net/visual-recognition/api","image-feature":"classifyImage","lang":"en","x":410,"y":240,"wires":[["a611227a.3a9108","4e1c1a9d.2bb4c4"]]},{"id":"c2cf025d.242bc","type":"http in","z":"d1ed293e.94fbb8","name":"","url":"/reco","method":"get","upload":false,"swaggerDoc":"","x":88,"y":86,"wires":[["4ebf4c86.c1cfec"]]},{"id":"38d3f227.b59c1e","type":"http response","z":"d1ed293e.94fbb8","name":"HTTP Response","statusCode":"","headers":{},"x":802,"y":196,"wires":[]},{"id":"4ebf4c86.c1cfec","type":"switch","z":"d1ed293e.94fbb8","name":"Check image param","property":"payload.imageurl","propertyType":"msg","rules":[{"t":"null"},{"t":"else"}],"checkall":"false","repair":false,"outputs":2,"x":212,"y":148,"wires":[["4a228289.0314cc"],["b21a60ff.4542f"]]},{"id":"4a228289.0314cc","type":"template","z":"d1ed293e.94fbb8","name":"Get Image URL","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<html>\n<head><title>Watson Visual Recognition on Node-RED</title></head>\n<body>\n<h1>Welcome to the Watson Visual Recognition Demo on Node-RED</h1>\n    <h2>Select an image URL</h2>\n    <form  action=\"{{req._parsedUrl.pathname}}\">\n        <img src=\"https://raw.githubusercontent.com/watson-developer-cloud/visual-recognition-nodejs/master/public/images/samples/1.jpg\" height='100'/>\n        <img src=\"https://raw.githubusercontent.com/watson-developer-cloud/visual-recognition-nodejs/master/public/images/samples/2.jpg\" height='100'/>\n        <img src=\"https://raw.githubusercontent.com/watson-developer-cloud/visual-recognition-nodejs/master/public/images/samples/3.jpg\" height='100'/>\n        <img src=\"https://raw.githubusercontent.com/watson-developer-cloud/visual-recognition-nodejs/master/public/images/samples/4.jpg\" height='100'/>\n        <br/>Copy above image location URL or enter any image URL:<br/>\n        <input type=\"text\" name=\"imageurl\"/>\n        <input type=\"submit\" value=\"Analyze\"/>\n    </form>\n</body>\n</html>","output":"str","x":504,"y":141,"wires":[["38d3f227.b59c1e"]]},{"id":"b21a60ff.4542f","type":"change","z":"d1ed293e.94fbb8","name":"Extract img URL","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.imageurl","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":181,"y":278,"wires":[["d60bbe56.64b0d","cca17f42.5bfeb8"]]},{"id":"cca17f42.5bfeb8","type":"function","z":"d1ed293e.94fbb8","name":"Make a request for the Google Cloud Vision API to get labels","func":"//var image = {content: msg.payload.toString('base64')};\nvar image = \n{\n        \"source\":{\n          \"imageUri\":\n            msg.payload\n        }\n      };\nvar features = {type: 'LABEL_DETECTION', maxResults: 10};\nvar imageContext = {languageHints: 'ja'};\nvar request = {image: image, features: features, imageContext: imageContext};\nvar requests = {requests: request};\nmsg.payload = requests;\n\nreturn msg;","outputs":1,"noerr":0,"x":323,"y":384,"wires":[["9b03c422.ea785"]]},{"id":"9b03c422.ea785","type":"change","z":"d1ed293e.94fbb8","name":"Set url and headers","rules":[{"t":"set","p":"url","pt":"msg","to":"https://vision.googleapis.com/v1/images:annotate?key=AIzaSyDVD4-_EML_GzMteHEFIysQGEFXtLjaEoQ","tot":"str"},{"t":"set","p":"headers","pt":"msg","to":"Content-Type: application/json","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":274,"y":437,"wires":[["683d08b9.c35b78"]]},{"id":"683d08b9.c35b78","type":"http request","z":"d1ed293e.94fbb8","name":"Send a request to get labels","method":"POST","ret":"obj","url":"","tls":"","x":304,"y":485,"wires":[["7b94cee6.3d523"]]},{"id":"7b94cee6.3d523","type":"function","z":"d1ed293e.94fbb8","name":"Report found labels","func":"// To skip messages like { \"responses\": [ {} ] }\nif (Object.keys(msg.payload.responses[0]).length < 1) {\n    return null;\n}\n\nvar labels = 'labels: ';\nvar labelAnnotations = msg.payload.responses[0].labelAnnotations;\nfor (var i = 0; i < labelAnnotations.length; i++) {\n    labels += labelAnnotations[i].description;\n    labels +=' (' + labelAnnotations[i].score + '), ';\n}\n\nmsg.payload = labels.slice(0, labels.length - 2);\nreturn msg;","outputs":1,"noerr":0,"x":283,"y":533,"wires":[["fa04bea4.9fd86"]]},{"id":"4e1c1a9d.2bb4c4","type":"debug","z":"d1ed293e.94fbb8","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":474,"y":337,"wires":[]},{"id":"3ffea4b3.cdf91c","type":"join","z":"d1ed293e.94fbb8","name":"","mode":"custom","build":"array","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":703.5,"y":387,"wires":[["b8462d63.c88e","91e997fd.221388"]]},{"id":"e0707516.b9e8a","type":"debug","z":"d1ed293e.94fbb8","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":298,"y":629,"wires":[]},{"id":"a611227a.3a9108","type":"function","z":"d1ed293e.94fbb8","name":"Format IBM Visual Rec result","func":"var visual_result = [];\n\nfor(var i=0;i<msg.result.images[0].classifiers[0].classes.length;i++)\n{\n    visual_result.push({\"class\":msg.result.images[0].classifiers[0].classes[i].class, \"score\":msg.result.images[0].classifiers[0].classes[i].score, \"type\": \"IBM\"});\n}\n\nvisual_result.sort(function(a, b){return b.score - a.score});\n\nmsg.urlimage = msg.payload;\nmsg.payload = visual_result;\nreturn msg;","outputs":1,"noerr":0,"x":449,"y":293,"wires":[["3ffea4b3.cdf91c"]]},{"id":"fa04bea4.9fd86","type":"function","z":"d1ed293e.94fbb8","name":"Format Google Vision result","func":"var visual_result = [];\nvar google_result = msg.payload.substring(8);\nvar classe;\nvar score;\nvar index;\nfor(var i=0;i<10;i++)\n{\nindex = google_result.indexOf(\"(\");\nclasse = google_result.substring(0,index-1);\ngoogle_result = google_result.substring(index+1);\nindex = google_result.indexOf(\")\");\nscore = Number(google_result.substring(0,index));\nvisual_result.push({\"class\": classe,\"score\":score,\"type\":\"Google\"});\ngoogle_result = google_result.substring(index+3);\n}\nvisual_result.sort(function(a, b){return b.score - a.score});\nmsg.payload = visual_result;\nreturn msg;","outputs":1,"noerr":0,"x":291,"y":581,"wires":[["e0707516.b9e8a","3ffea4b3.cdf91c"]]},{"id":"b8462d63.c88e","type":"debug","z":"d1ed293e.94fbb8","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":728,"y":469,"wires":[]},{"id":"91e997fd.221388","type":"template","z":"d1ed293e.94fbb8","name":"Multiple Report","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<html>\n<head><title>Watson Visual Recognition Vs. Google Vision on Node-RED</title></head>\n<body>\n<h1>Watson Visual Recognition Vs. Google Vision on Node-RED</h1>\n<p>Analyzed image: {{urlimage}}<br/><img src=\"{{urlimage}}\" height='100'/></p>\n\n<table border='1' style=\"display: inline-block;\">\n    <thead><tr><th>Name with {{payload.0.0.type}}</th><th>Score with {{payload.0.0.type}}</th></tr></thead>\n{{#payload.0}}\n  <tr><td><b>{{class}}</b></td><td><i>{{score}}</i></td></tr>\n{{/payload.0}}\n</table>\n\n<table border='1' style=\"display: inline-block;\">\n    <thead><tr><th>Name with {{payload.1.0.type}}</th><th>Score with {{payload.1.0.type}}</th></tr></thead>\n{{#payload.1}}\n  <tr><td><b>{{class}}</b></td><td><i>{{score}}</i></td></tr>\n{{/payload.1}}\n</table>\n\n<form  action=\"{{req._parsedUrl.pathname}}\">\n    <input type=\"submit\" value=\"Try again\"/>\n</form>\n</body>\n</html>","output":"str","x":758,"y":334,"wires":[["38d3f227.b59c1e"]]},{"id":"1728dd16.b1be8b","type":"comment","z":"e672cd30.b10e8","name":"E1 - Telegram bot with Watson assistant API and Watson Language translator API","info":"Owner Andrea Bortolossi","x":340,"y":100,"wires":[]},{"id":"e5ff11d0.de512","type":"comment","z":"e672cd30.b10e8","name":"E5 - Integrate telegram / Watson visual recognition API and text to speech API","info":"Owner Luca Crippa","x":330,"y":260,"wires":[]},{"id":"7c915bcf.e7de84","type":"comment","z":"e672cd30.b10e8","name":"E2 - Telegram bot with Watson visual recognition API","info":"Owner Andrea Bortolossi","x":260,"y":140,"wires":[]},{"id":"3671340.44afe4c","type":"comment","z":"e672cd30.b10e8","name":"E3 - Integrate telegram / Watson assistant API and cloudant DB","info":"Owner Andrea Bortolossi","x":290,"y":180,"wires":[]},{"id":"b7ba5b24.472338","type":"comment","z":"e672cd30.b10e8","name":"INDEX of EXPERIMENTS","info":"","x":130,"y":60,"wires":[]},{"id":"414093e.144436c","type":"function","z":"558ade02.8ece5","name":"format input","func":"var time = new Date();\nvar hour = time.getUTCHours();\nvar minute = time.getUTCMinutes();\nvar second = time.getUTCSeconds();\n\n// Create MQTT message in JSON\nmsg = {\n  payload: \n    {\n      d:{\n        \"temp\" : msg.payload.d.temp,\n        \"deviceId\" : msg.payload.d.name,\n        \"deviceName\" : \"Device_1\",\n        \"time\" : hour*60*60+minute*60+second\n      }\n    }\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":330,"y":100,"wires":[[]]},{"id":"715cbbe0.19750c","type":"function","z":"558ade02.8ece5","name":"format input","func":"var time = new Date();\nvar hour = time.getUTCHours();\nvar minute = time.getUTCMinutes();\nvar second = time.getUTCSeconds();\n\n// Create MQTT message in JSON\nmsg = {\n  payload: \n    {\n      d:{\n        \"temp\" : msg.payload.d.temp,\n        \"deviceId\" : msg.payload.d.name,\n        \"deviceName\" : \"Device_2\",\n        \"time\" : hour*60*60+minute*60+second\n      }\n    }\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":330,"y":220,"wires":[[]]},{"id":"47439aaa.cf3714","type":"http in","z":"558ade02.8ece5","name":"","url":"/getdata","method":"get","upload":false,"swaggerDoc":"","x":130,"y":340,"wires":[["a8fd6d27.1b072"]]},{"id":"8b4b3e5c.3e72","type":"http response","z":"558ade02.8ece5","name":"","statusCode":"","headers":{},"x":710,"y":360,"wires":[]},{"id":"ad7a2599.3404c","type":"template","z":"558ade02.8ece5","name":"Auto Update Script","field":"","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n<script src=\"https://d3js.org/d3.v3.min.js\"></script>\n<script src=\"https://d3js.org/d3-color.v1.min.js\"></script>\n<script src=\"https://d3js.org/d3-interpolate.v1.min.js\"></script>\n<script src=\"https://d3js.org/d3-scale-chromatic.v1.min.js\"></script>\n\n<style type=\"text/css\">\nbody {background-color: #ccc;}\nsvg {background-color: white;}\n\t\t\t.axis path,\n\t\t\t.axis line {\n\t\t\t\tfill: none;\n\t\t\t\tstroke: black;\n\t\t\t\tshape-rendering: crispEdges;\n\t\t\t}\n\n\t\t\t.axis text {\n\t\t\t\tfont-family: sans-serif;\n\t\t\t\tfont-size: 11px;\n\t\t\t}\n</style>\n\n<body>\n    <button type=button onclick=\"resetDB()\">RESET DB</button>\n<div>\n<p>Number of device 1 inputs:<span id=\"sizeinput1\"></span></p>\n<p>Number of device 2 inputs:<span id=\"sizeinput2\"></span></p>\n</div>\n<svg id=\"canvas\" width=\"700\" height=\"350\"></svg>\n</body>\n\n<script type=\"text/javascript\">\n\n//Refresh data milliseconds\nvar dataRefresh = 2000;\n\t\t\n// Call getdata every 2s and save result in getDB in JSON format (main function of web call)\nsetInterval(function(){\n\n     // In this variable we will put the JSON output of the getdata request from the cloudant DB\n    var getDB = [];\n    var req = httpRequest(\"https://myiotexperiments.eu-gb.mybluemix.net/getdata\", \"GET\");  // In this example you don't want to GET the full page contents\n  //  alert(req.status == 200 ? \"found!\" : \"failed\");  // We didn't provided an async proc so this will be executed after request completion only \n    getDB = JSON.parse(req.responseText);\n\n    //Vector where collect device inputs (each element of this vector represent a device)\n    var deviceData = []\n    deviceData = ETLdevice(getDB);\nconsole.log(deviceData)\n    // Update input details\n    if(deviceData.length>0){\n    $(\"#sizeinput1\").html(deviceData[0].time.length);\n    $(\"#sizeinput2\").html(deviceData[1].time.length);\n}\n    drawGraph(deviceData);\n\n },dataRefresh);\n\nfunction httpRequest(address, reqType) {\n   var r = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject(\"Microsoft.XMLHTTP\");\n   r.open(reqType, address,false);\n   r.send();\n   return r;\n}\n\n//From raw data to device drive data (return a vector of device data)\nfunction ETLdevice(getDB){\n\n    var deviceInput = [];\n     //Format data from the device point of view\n    for(var i=0;i<getDB.length;i++)\n    {\n        //is the first time that you find this device?\n        if(!finddeviceName(deviceInput,getDB[i].payload.d.deviceName))\n        {\n            var temp1 = [];\n            var temp2 = [];\n            temp1.push(getDB[i].payload.d.time);\n            temp2.push(getDB[i].payload.d.temp);\n            deviceInput.push({deviceName:getDB[i].payload.d.deviceName,time:temp1, temp:temp2});\n        }\n        else{\n            deviceInput[indexdeviceName(deviceInput,getDB[i].payload.d.deviceName)].time.push(getDB[i].payload.d.time);\n            deviceInput[indexdeviceName(deviceInput,getDB[i].payload.d.deviceName)].temp.push(getDB[i].payload.d.temp);\n            }\n    }\n\nvar deviceInputSorted = [];\n    // Sort all parameters by timestamp\n    for(var i=0;i<deviceInput.length;i++){\n\n    //prepare data to be sorted\n    var data = [];\n    for(var k=0;k<deviceInput[i].time.length;k++)\n        data.push({time: deviceInput[i].time[k],temp:deviceInput[i].temp[k]});\n    \n    //Sort data by time\n    data.sort(function(a, b) {return a.time - b.time;});\n\n    // update data in deviceInput\n    deviceInputSorted.push({deviceName:deviceInput[i].deviceName,time:[], temp:[]});\n    for(var k=0;k<deviceInput[i].time.length;k++)\n        {\n            deviceInputSorted[i].time.push(data[k].time);\n            deviceInputSorted[i].temp.push(data[k].temp);\n        }\n    }\n    \n    return deviceInputSorted;\n}\n\n//Draw graphs\nfunction drawGraph(deviceInput){\n    \n    //Width and height\n    var w = 700;\n    var h = 350;\n    var padding = 40;\n\n     // Start draw graphs\n    d3.selectAll(\"svg\").remove();\n    \n    //Create SVG element\n\tvar svg = d3.select(\"body\")\n\t\t\t\t.append(\"svg\")\n\t\t\t\t.attr(\"id\",\"canvas\")\n\t\t\t\t.attr(\"width\", w)\n\t\t\t\t.attr(\"height\", h);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconsole.log(minmaxtime(deviceInput));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(minmaxtemp(deviceInput));\n    var xScale = d3.scale.linear()\n                    .domain(minmaxtime(deviceInput))\n\t\t\t        .range([padding, w-padding]);\n\t\t\t\n    var yScale = d3.scale.linear()\n\t\t            .domain(minmaxtemp(deviceInput))\n\t\t\t        .range([h - padding, padding]);\n\n    //Define X axis\n    var xAxis = d3.svg.axis()\n            \t\t.scale(xScale)\n\t\t    \t\t.orient(\"bottom\")\n\t\t\t    \t.ticks(5);\n\n    //Define Y axis\n    var yAxis = d3.svg.axis()\n\t\t    \t\t.scale(yScale)\n\t    \t\t\t.orient(\"left\")\n\t\t\t    \t.ticks(5);\n\n    //Create X axis\n\tsvg.append(\"g\")\n\t    .attr(\"class\", \"x axis\")\n\t    .attr(\"transform\", \"translate(0,\" + (h - padding +5)  + \")\")\n\t    .call(xAxis);\n\n    //Create Y axis\n\tsvg.append(\"g\")\n\t    .attr(\"class\", \"y axis\")\n\t    .attr(\"transform\", \"translate(\" + (padding-5) + \",0)\")\n\t    .call(yAxis);\n\n    var lineFunction = d3.svg.line()\n\t                        .x(function(d) { return xScale(d.time); })\n\t                        .y(function(d) { return yScale(d.temp); })\n                            .interpolate(\"linear\");\n\n    var color = d3.scale.category10();\n  \nfor(var i=0;i<deviceInput.length;i++)\n{\n    var dataToBePlotted = [];\n    \n    for(var k=0;k<deviceInput[i].time.length;k++)\n        dataToBePlotted.push({device:deviceInput[i].deviceName,time:deviceInput[i].time[k],temp:deviceInput[i].temp[k]});\n    \n    var lineGraph1 = svg.append(\"g\").append(\"path\")\n                        .attr(\"class\",\"graph\")\n                        .attr(\"d\", lineFunction(dataToBePlotted))\n                        .attr(\"fill\",\"none\")\n                        .style(\"stroke\", color(deviceInput[i].deviceName));\n//      .datum(function(d) { return {id: d.id, value: d.values[d.values.length - 1]}; })    \n      svg.append(\"g\").append(\"text\")\n      .attr(\"transform\", \"translate(\" + xScale(dataToBePlotted[dataToBePlotted.length-1].time) + \",\" + yScale(dataToBePlotted[dataToBePlotted.length-1].temp) + \")\")\n      .attr(\"x\", 3)\n      .attr(\"dy\", 1)\n      .style(\"font\", \"10px sans-serif\")\n      .text(deviceInput[i].deviceName);\n/*                        .attr(\"stroke\", \"black\")\n                        .attr(\"stroke-width\", 2)\n\t\t\t\t\t    .attr(\"stroke-dasharray\",2)\n\t\t\t\t\t    .attr(\"fill\", color);*/\n}\n    \t/*\t\t\t \n    var lineGraph2 = svg.append(\"g\").append(\"path\")\n                        .attr(\"class\",\"graph\")\n                        .attr(\"d\", lineFunction(deviceInput[1]))\n                        .attr(\"stroke\", \"red\")\n                        .attr(\"stroke-width\", 2)\n\t\t\t\t\t    .attr(\"stroke-dasharray\",2)\n    \t\t\t\t    .attr(\"fill-opacity\",1);*/\n}\n\n// Call the \"Reset DB flow\"\nfunction resetDB(){\n    console.log(\"Start reset db\")\n     var theUrl = \"https://myiotexperiments.eu-gb.mybluemix.net/api/resetDemo\";\n\t var xmlHttp = new XMLHttpRequest();\n\t xmlHttp.open( \"GET\", theUrl, false );\n\t xmlHttp.send( null );\n\t     console.log(\"db has been reset\")\n}\n\n// return TRUE if does exist a device name inside the devicinput vector\nfunction finddeviceName(arr,name){\n    for(var i=0;i<arr.length;i++) \n    {\n        if(arr[i].deviceName==name)return 1;\n    }\n    return 0;\n}\n\n// return the index of a given devicename inside the devicinput vector\nfunction indexdeviceName(arr,name){\n    for(var i=0;i<arr.length;i++) if(arr[i].deviceName==name)return i;\n    return null;\n}\n\n//retrun the [min,max] of the deviceInputa time\nfunction minmaxtime(arr){\n\n    var min = d3.min(arr[0].time);\n    var max = d3.max(arr[0].time);\n    for(var i=1;i<arr.length;i++)\n    {\n        min = (min>d3.min(arr[i].time)) ? (d3.min(arr[i].time)):(min);\n        max = (max<d3.max(arr[i].time)) ? (d3.max(arr[i].time)):(max);\n    }\n\n    return [min,max];\n}\n\n//retrun the [min,max] of the deviceInputa temp\nfunction minmaxtemp(arr){\n\n    var min = d3.min(arr[0].temp);\n    var max = d3.max(arr[0].temp);\n    for(var i=1;i<arr.length;i++)\n    {\n        min = (min>d3.min(arr[i].temp)) ? (d3.min(arr[i].temp)) : (min);\n        max = (max<d3.max(arr[i].temp)) ? (d3.max(arr[i].temp)) : (max);\n    }\n\n    return [min,max];\n}\n\n</script>","x":390,"y":440,"wires":[["8b4b3e5c.3e72"]]},{"id":"45daaa83.81df34","type":"http in","z":"558ade02.8ece5","name":"","url":"/web","method":"get","upload":false,"swaggerDoc":"","x":120,"y":440,"wires":[["ad7a2599.3404c"]]},{"id":"29b47dce.e33bfa","type":"http in","z":"558ade02.8ece5","name":"Reset Demo","url":"/api/resetDemo","method":"get","upload":false,"swaggerDoc":"","x":130,"y":600,"wires":[["89ade90c.bd747"]]},{"id":"b6fa61c3.4698a","type":"function","z":"558ade02.8ece5","name":"bulk delete function","func":"var count = msg.payload.length;\nvar list = [];\nfor (i=0;i<count;i++) {\nlist.push({\n        _id: msg.payload[i]._id,\n        _rev: msg.payload[i]._rev,\n        _deleted: true\n    });\n}\n\nif (i == 0) {\nmsg.payload = \"No documents were found.  The database is empty!\";\nreturn [null, msg];\n}\n\nmsg.payload = {\n                \"docs\": \n                list\n               }\nreturn msg;","outputs":"2","noerr":0,"x":508.6667251586914,"y":600.6666078567505,"wires":[["a5a755f6.8c1b8"],["14cf8417.11f66c"]]},{"id":"a5a755f6.8c1b8","type":"http request","z":"558ade02.8ece5","name":"deleteDocs","method":"POST","ret":"obj","url":"https://6d9802c1-eac1-47fe-8d15-b07444096d03-bluemix:06b5b4446682207de94ec3cd301fcc283bd361ef16691dd374af7a3f2b38f84f@6d9802c1-eac1-47fe-8d15-b07444096d03-bluemix.cloudant.com/deviceinput/_bulk_docs","tls":"","x":790,"y":560,"wires":[["14cf8417.11f66c"]]},{"id":"14cf8417.11f66c","type":"http response","z":"558ade02.8ece5","name":"Response","statusCode":"","headers":{},"x":810,"y":640,"wires":[]},{"id":"ac0e29a9.6a50a","type":"comment","z":"558ade02.8ece5","name":"Reset DB flow","info":"Delete all docs contained in the cloudant DB","x":118.5,"y":531,"wires":[]},{"id":"a2e1bbb5.37a88","type":"comment","z":"558ade02.8ece5","name":"Manage device input flow","info":"Set up devices\nFormat input\nWrite data in the cloudant db","x":150,"y":60,"wires":[]},{"id":"6a8ed5a3.e4421c","type":"comment","z":"558ade02.8ece5","name":"Compute on data","info":"Read data from cloudant db and make your computations","x":120,"y":300,"wires":[]},{"id":"5b7a5c8e.abeb14","type":"function","z":"558ade02.8ece5","name":"format input","func":"var time = new Date();\nvar hour = time.getUTCHours();\nvar minute = time.getUTCMinutes();\nvar second = time.getUTCSeconds();\n\n// Create MQTT message in JSON\nmsg = {\n  payload: \n    {\n      d:{\n        \"temp\" : msg.payload.d.temp,\n        \"deviceId\" : msg.payload.d.name,\n        \"deviceName\" : \"Device_3\",\n        \"time\" : hour*60*60+minute*60+second\n      }\n    }\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":330,"y":160,"wires":[[]]},{"id":"9b5887aa.e29a6","type":"e-mail","z":"558ade02.8ece5","server":"smtp.gmail.com","port":"465","secure":true,"name":"bortolossi.andrea89@gmail.com","dname":"Andrea mail","x":550,"y":780,"wires":[]},{"id":"1ff3739.4e0870c","type":"http in","z":"558ade02.8ece5","name":"","url":"/alert","method":"get","upload":false,"swaggerDoc":"","x":100,"y":780,"wires":[[]]},{"id":"9a566b5e.77acb","type":"function","z":"558ade02.8ece5","name":"format input","func":"msg.topic = \"WARNING TEMPERATURE\";\nmsg.payload = \"WARNING: temperature is over the limit!\"\nreturn msg;","outputs":1,"noerr":0,"x":330,"y":780,"wires":[["9b5887aa.e29a6"]]},{"id":"563d4c88.788884","type":"e-mail in","z":"558ade02.8ece5","name":"","protocol":"IMAP","server":"imap.gmail.com","useSSL":true,"port":"993","box":"INBOX","disposition":"Read","repeat":"30","x":90,"y":820,"wires":[[]]},{"id":"6ce1f48c.77b664","type":"comment","z":"558ade02.8ece5","name":"Send alert to mail","info":"","x":120,"y":700,"wires":[]},{"id":"54fc584c.313be","type":"cloudant out","z":"558ade02.8ece5","name":"db","cloudant":"5a465d72.6e6504","database":"nodered","service":"_ext_","payonly":false,"operation":"insert","x":570,"y":180,"wires":[]},{"id":"a8fd6d27.1b072","type":"cloudant in","z":"558ade02.8ece5","name":"","cloudant":"","database":"deviceinput","service":"myIoTexperiments-cloudantNoSQLDB","search":"_all_","design":"","index":"","x":330,"y":340,"wires":[["8b4b3e5c.3e72"]]},{"id":"89ade90c.bd747","type":"cloudant in","z":"558ade02.8ece5","name":"Get all docs","cloudant":"","database":"deviceinput","service":"myIoTexperiments-cloudantNoSQLDB","search":"_all_","design":"","index":"","x":311.3333511352539,"y":600.4444093704224,"wires":[["b6fa61c3.4698a"]]},{"id":"7075c597.e7655c","type":"ibmiot in","z":"558ade02.8ece5","authentication":"quickstart","apiKey":"","inputType":"evt","logicalInterface":"","ruleId":"","deviceId":"4ce3690155db","applicationId":"","deviceType":"+","eventType":"+","commandType":"","format":"json","name":"Device_1","service":"quickstart","allDevices":false,"allApplications":false,"allDeviceTypes":true,"allLogicalInterfaces":false,"allEvents":true,"allCommands":false,"allFormats":false,"qos":"0","x":140,"y":100,"wires":[["414093e.144436c"]]},{"id":"6cbeff7d.3ebc08","type":"ibmiot in","z":"558ade02.8ece5","authentication":"quickstart","apiKey":"","inputType":"evt","deviceId":"aff07b1324a4","applicationId":"","deviceType":"+","eventType":"+","commandType":"","format":"json","name":"Device_2","service":"quickstart","allDevices":false,"allApplications":false,"allDeviceTypes":true,"allEvents":true,"allCommands":false,"allFormats":false,"x":140,"y":220,"wires":[["715cbbe0.19750c"]]},{"id":"dd5b1ba7.5ca38","type":"ibmiot in","z":"558ade02.8ece5","authentication":"quickstart","apiKey":"","inputType":"evt","deviceId":"15423e3a3669","applicationId":"","deviceType":"+","eventType":"+","commandType":"","format":"json","name":"Device_3","service":"quickstart","allDevices":false,"allApplications":false,"allDeviceTypes":true,"allEvents":true,"allCommands":false,"allFormats":false,"x":140,"y":160,"wires":[["5b7a5c8e.abeb14"]]},{"id":"7e33714d.37a5a","type":"inject","z":"558ade02.8ece5","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":262.5,"y":293,"wires":[["54fc584c.313be"]]},{"id":"620831ba.7aa328","type":"function","z":"558ade02.8ece5","name":"format input","func":"msg = {\n  payload: \n    {\n      d:{\n        \"time\" : msg.payload\n      }\n    }\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":495,"y":212,"wires":[["81f1fe11.4bf1b8"]]},{"id":"81f1fe11.4bf1b8","type":"debug","z":"558ade02.8ece5","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload.number","x":605.5,"y":281,"wires":[]},{"id":"40a5d0ca.98c228","type":"comment","z":"e672cd30.b10e8","name":"E4 - Manage IoT devices","info":"Owner Andrea Bortolossi","x":170,"y":220,"wires":[]},{"id":"cc01eebd.82c29","type":"function","z":"e9910dde.d898e","name":"F1 - Init bot","func":"/* Function1.js\n * Initialize Telegram bot messages\n * v 1.0\n * November 2018\n */\n\nmsg.chatId = msg.payload.chatId;\nmsg.user = msg.payload.chatId;\nmsg.payload = msg.payload.content;\nreturn msg;\n","outputs":1,"noerr":0,"x":410,"y":440,"wires":[["9c82efab.01a55"]]},{"id":"9c82efab.01a55","type":"watson-conversation-v1","z":"e9910dde.d898e","name":"Assistant","workspaceid":"3279595b-fe25-4610-b9e5-31c389d0bfe1","multiuser":false,"context":true,"empty-payload":false,"default-endpoint":true,"service-endpoint":"https://gateway.watsonplatform.net/assistant/api","timeout":"","optout-learning":false,"x":496.8571472167969,"y":491.28571796417236,"wires":[[]]},{"id":"580e1997.ae21c","type":"telegram sender","z":"7f31ef56.29851","name":"","bot":"5c97dfac.66c92","x":798.3491973876953,"y":283.19047355651855,"wires":[[]]},{"id":"ccbd845c.ded9d8","type":"watson-text-to-speech","z":"7f31ef56.29851","name":"","lang":"en-US","langhidden":"en-US","langcustom":"NoCustomisationSetting","langcustomhidden":"","voice":"en-US_AllisonVoice","voicehidden":"en-US_AllisonVoice","format":"audio/ogg; codecs=opus","password":"","apikey":"lDB1gU8_-esaTacTof2ui7ZIJciybV5_he9sttF70Y3W","payload-response":true,"default-endpoint":true,"service-endpoint":"https://stream.watsonplatform.net/text-to-speech/api","x":470.43441009521484,"y":339.73810482025146,"wires":[["1f31791.0c46a07"]]},{"id":"1f31791.0c46a07","type":"function","z":"7f31ef56.29851","name":"F8 - Response audio out","func":"/* Function8.js\n * Prepare output audio message to be sent to Telegram bot\n * v 1.0\n * November 2018\n */\n\nmsg.payload = {\n  \tchatId : msg.chatId,\n  \ttype : \"voice\",\n  \tcontent : msg.speech\n};\nreturn msg;\n","outputs":1,"noerr":0,"x":552.4879112243652,"y":283.38094997406006,"wires":[["580e1997.ae21c"]]},{"id":"44d5fbb.9d44b84","type":"function","z":"620afc57.13b67c","name":"F3 - Init Vrec","func":"/* Function3.js\n * Prepare Visual Recognition Telegram bot\n * v 1.0\n * November 2018\n */\n\nmsg.chatId = msg.payload.chatId;\nmsg.payload = msg.payload.weblink;\nreturn msg;\n","outputs":1,"noerr":0,"x":356.7142868041992,"y":195.8571605682373,"wires":[["fec85724.a86dc8"]]},{"id":"479c8c91.356a5c","type":"function","z":"620afc57.13b67c","name":"F4 - Response Vrec","func":"/* Function4.js\n * Prepare response of Visual Recognition to Telegram bot\n * v 1.0\n * November 2018\n */\n\nmsg.payload = {\n  chatId: msg.chatId,\n  type: \"message\",\n  content: \"This is a \" + msg.result.images[0].classifiers[0].classes[0].class\n};\nreturn msg;\n","outputs":1,"noerr":0,"x":659.7618179321289,"y":143.36901092529297,"wires":[["610f1107.32c68","b539d70a.9a3c6"]]},{"id":"fec85724.a86dc8","type":"visual-recognition-v3","z":"620afc57.13b67c","name":"Visualrec","vr-service-endpoint":"https://gateway.watsonplatform.net/visual-recognition/api","image-feature":"classifyImage","lang":"en","x":471.5714340209961,"y":143.5714464187622,"wires":[["479c8c91.356a5c"]]},{"id":"610f1107.32c68","type":"template","z":"620afc57.13b67c","name":"Prepare text to speech out","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"{{{payload.content}}}","output":"str","x":801.6666259765625,"y":280,"wires":[[]]},{"id":"b539d70a.9a3c6","type":"telegram sender","z":"620afc57.13b67c","name":"","bot":"5c97dfac.66c92","x":953.3333129882812,"y":71.66666412353516,"wires":[[]]},{"id":"59e9c41.1d27f3c","type":"telegram receiver","z":"11155a50.40b31e","name":"","bot":"81eb50ff.27d348","saveDataDir":"","x":200,"y":300,"wires":[["5e06bf99.3404e"],[]]},{"id":"5e06bf99.3404e","type":"switch","z":"11155a50.40b31e","name":"","property":"payload.type","propertyType":"msg","rules":[{"t":"eq","v":"photo","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":370,"y":340,"wires":[["5d0a0b2b.82fa14"]]},{"id":"fabaa5c.cc334d8","type":"comment","z":"11155a50.40b31e","name":"Select type","info":"This switch selects the msg.payload.type of the input message. In this case, must be \"photo\".","x":380,"y":240,"wires":[]},{"id":"5d0a0b2b.82fa14","type":"subflow:620afc57.13b67c","z":"11155a50.40b31e","name":"","x":560,"y":300,"wires":[["79ffe467.5b340c"]]},{"id":"4b0ffb59.1d7024","type":"function","z":"dbab4441.ee92f8","name":"F9 - Response assistant","func":"/* Function9.js\n * Prepare message to be sent to Telegram bot\n * v 1.0\n * November 2018\n */\n\nvar outputMsg = \"\";\n\tif(msg.payload.output.text) {\n    \t\tfor(i=0;i<msg.payload.output.text.length;i++){\n        \t\t\toutputMsg += msg.payload.output.text[i] +\"\\n\"\n    \t\t}\n\t}\nmsg.payload = {\n  \tchatId : msg.chatId,\n  \ttype : \"message\",\n  \tcontent : outputMsg\n};\nreturn msg;\n","outputs":1,"noerr":0,"x":813.2224464416504,"y":505.02374362945557,"wires":[["359a079d.3f6868"]]},{"id":"217caab6.78da36","type":"template","z":"dbab4441.ee92f8","name":"Prepare text to speech out","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"{{{payload.output.text}}}","output":"str","x":840,"y":580,"wires":[[]]},{"id":"359a079d.3f6868","type":"telegram sender","z":"dbab4441.ee92f8","name":"","bot":"75d15fe4.47781","x":1050.7143669128418,"y":505.1428804397583,"wires":[[]]},{"id":"bf38cb91.9fc9f","type":"telegram receiver","z":"fa80adc1.47bc4","name":"","bot":"75d15fe4.47781","saveDataDir":"","x":160,"y":160,"wires":[["99733a5f.7a594"],[]]},{"id":"99733a5f.7a594","type":"switch","z":"fa80adc1.47bc4","name":"","property":"payload.type","propertyType":"msg","rules":[{"t":"else"}],"checkall":"true","repair":false,"outputs":1,"x":330,"y":220,"wires":[["34280e54.4e2b82"]]},{"id":"e207b534.c679e","type":"switch","z":"fa80adc1.47bc4","name":"","property":"payload.context.action","propertyType":"msg","rules":[{"t":"else"}],"checkall":"true","repair":false,"outputs":1,"x":710,"y":220,"wires":[["d5ff226.d4357e"]]},{"id":"34280e54.4e2b82","type":"subflow:e9910dde.d898e","z":"fa80adc1.47bc4","name":"","x":530,"y":220,"wires":[["e207b534.c679e"]]},{"id":"d5ff226.d4357e","type":"subflow:dbab4441.ee92f8","z":"fa80adc1.47bc4","name":"","x":910,"y":220,"wires":[["5ac41c72.8ce574"]]},{"id":"f2d2b8da.1fbd28","type":"comment","z":"fa80adc1.47bc4","name":"Select type","info":"This switch selects the msg.payload.type of the input message. In this case, must be \"otherwise\".","x":340,"y":120,"wires":[]},{"id":"8ba3b3f7.fdb1a8","type":"comment","z":"fa80adc1.47bc4","name":"Select action","info":"This switch selects the payload.context.action of the Assistant.","x":730,"y":120,"wires":[]},{"id":"5ac41c72.8ce574","type":"subflow:7f31ef56.29851","z":"fa80adc1.47bc4","name":"","x":1090,"y":220,"wires":[]},{"id":"66d57eda.14aba","type":"comment","z":"e672cd30.b10e8","name":"E6 - Integrate telegram / Watson assistant API and test to speech API","info":"Owner Luca Crippa","x":310,"y":300,"wires":[]},{"id":"79ffe467.5b340c","type":"subflow:7f31ef56.29851","z":"11155a50.40b31e","name":"","x":750,"y":300,"wires":[]},{"id":"eae2867a.095228","type":"telegram sender","z":"2efdae27.c34342","name":"","bot":"fd083a56.b1bd6","x":1380,"y":180,"wires":[[]]},{"id":"438d864e.d89dd8","type":"function","z":"2efdae27.c34342","name":"Prepare for Conversation","func":"msg.chatId = msg.originalMessage.chat.id;\nmsg.payload = msg.payload.content;\nreturn msg;","outputs":1,"noerr":0,"x":125.7777099609375,"y":325.9722213745117,"wires":[["e030daf7.240e18"]]},{"id":"e030daf7.240e18","type":"watson-conversation-v1","z":"2efdae27.c34342","name":"","workspaceid":"3c0f57bf-e53f-44ad-ae0f-35f15b6e4e0d","multiuser":false,"context":true,"empty-payload":false,"default-endpoint":true,"service-endpoint":"https://gateway-fra.watsonplatform.net/assistant/api","timeout":"","optout-learning":false,"x":128.7777099609375,"y":460.9722213745117,"wires":[["e7e5dc3e.f705c","c3f256e7.d7fab8","909d524a.e7599"]]},{"id":"d81796b.53572e8","type":"telegram receiver","z":"2efdae27.c34342","name":"","bot":"fd083a56.b1bd6","saveDataDir":"","x":78.2777099609375,"y":243.97222137451172,"wires":[["438d864e.d89dd8"],[]]},{"id":"909d524a.e7599","type":"switch","z":"2efdae27.c34342","name":"database","property":"payload.context.database","propertyType":"msg","rules":[{"t":"eq","v":"skip","vt":"str"},{"t":"eq","v":"read_order","vt":"str"},{"t":"eq","v":"read_menu","vt":"str"},{"t":"eq","v":"write_order","vt":"str"},{"t":"eq","v":"write_deleteAll","vt":"str"}],"checkall":"true","repair":false,"outputs":5,"x":321.2777099609375,"y":431.9722213745117,"wires":[["190d5631.d96812"],["8324f3d0.8aa62"],["33894283.776cce"],["d316359a.2fde78","190d5631.d96812"],["71ee4807.995f48"]]},{"id":"190d5631.d96812","type":"function","z":"2efdae27.c34342","name":"skip db","func":"msg.payload = {\n  chatId : msg.originalMessage.chat.id,\n  type : \"message\",\n  content : msg.payload.output.text[0]};\nreturn msg;\n","outputs":1,"noerr":0,"x":573.2777099609375,"y":181.97223663330078,"wires":[["eae2867a.095228"]]},{"id":"8324f3d0.8aa62","type":"function","z":"2efdae27.c34342","name":"read order","func":"msg.payload=\"typeofdocumentSearch:order\";\nreturn msg;","outputs":1,"noerr":0,"x":576.2777099609375,"y":257.9722213745117,"wires":[["c979f02b.ae55e"]]},{"id":"4b96b9cc.e0106","type":"cloudant out","z":"2efdae27.c34342","name":"","cloudant":"","database":"pizzerianando","service":"FlowBasedExperiments-cloudantNoSQLDB","payonly":false,"operation":"insert","x":1065.611083984375,"y":367.41664123535156,"wires":[]},{"id":"1ed248e4.9fdf87","type":"cloudant in","z":"2efdae27.c34342","name":"","cloudant":"","database":"pizzerianando","service":"FlowBasedExperiments-cloudantNoSQLDB","search":"_idx_","design":"typeofdocumentsearch","index":"typeofdocumentSearch","x":748.1109619140625,"y":306.86109924316406,"wires":[["7a039e29.3b77a"]]},{"id":"7a039e29.3b77a","type":"function","z":"2efdae27.c34342","name":"menu answer","func":"var answer = \"Oggi abbiamo\"\nfor(i=0;i<msg.payload[0].payload.list.length;i++) answer = answer +\", \"+msg.payload[0].payload.list[i]; \n msg.payload = {   \n  chatId : msg.originalMessage.chat.id,\n  type : \"message\",\n  content : answer\n }\nreturn msg;","outputs":1,"noerr":0,"x":941.1944580078125,"y":307.02777099609375,"wires":[["eae2867a.095228"]]},{"id":"e7e5dc3e.f705c","type":"debug","z":"2efdae27.c34342","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload.context.database","x":136.02772521972656,"y":617.7222137451172,"wires":[]},{"id":"ce28c26b.24e0a8","type":"comment","z":"2efdae27.c34342","name":"Write DB","info":"Salviamo un documento composto da\n- tipo pizza\n- numero\n- orario (espresso in secondi)\n\nATTENZIONE: non c'? il controllo di finalizzazione scrittura su cloudant","x":1222.2777099609375,"y":388.4722137451172,"wires":[]},{"id":"f5381013.8e873","type":"comment","z":"2efdae27.c34342","name":"answer","info":"ATTENZIONE: trovare metodo per conservare dinamicamente chatId","x":1088.2777099609375,"y":280.47222900390625,"wires":[]},{"id":"5eddd477.208d0c","type":"cloudant in","z":"2efdae27.c34342","name":"","cloudant":"","database":"pizzerianando","service":"FlowBasedExperiments-cloudantNoSQLDB","search":"_idx_","design":"typeofdocumentsearch","index":"typeofdocumentSearch","x":771.0277099609375,"y":512.7222137451172,"wires":[["d68039f5.ffd1d"]]},{"id":"71ee4807.995f48","type":"function","z":"2efdae27.c34342","name":"delete orders","func":"msg.payload=\"typeofdocumentSearch:order\";\nreturn msg;","outputs":1,"noerr":0,"x":590.0277099609375,"y":449.7222137451172,"wires":[["5eddd477.208d0c"]]},{"id":"d68039f5.ffd1d","type":"function","z":"2efdae27.c34342","name":"Prepare list of _id","func":"var count = msg.payload.length;\nvar list = [];\nfor (i=0;i<count;i++) {\nlist.push({\n        _id: msg.payload[i]._id,\n        _rev: msg.payload[i]._rev,\n        _deleted: true\n    });\n}\n\nmsg.payload = {\n                \"docs\": \n                list\n               }\n               \nreturn msg;","outputs":1,"noerr":0,"x":937.0277099609375,"y":577.7222137451172,"wires":[["71c5ef51.b06f2"]]},{"id":"71c5ef51.b06f2","type":"http request","z":"2efdae27.c34342","name":"deleteDocs","method":"POST","ret":"obj","url":"https://b60ac1c4-cde4-4f7c-b29d-437e581a3d98-bluemix.cloudant.com/pizzerianando/_bulk_docs","tls":"","x":1000.7833251953125,"y":446.3666229248047,"wires":[["b69bc8f.6cf76b8"]]},{"id":"33894283.776cce","type":"function","z":"2efdae27.c34342","name":"read menu","func":"msg.payload=\"typeofdocumentSearch:menu\";\nreturn msg;","outputs":1,"noerr":0,"x":576.8443603515625,"y":307.5388870239258,"wires":[["1ed248e4.9fdf87"]]},{"id":"d316359a.2fde78","type":"function","z":"2efdae27.c34342","name":"write order","func":"var time = new Date();\nvar hour = time.getUTCHours();\nvar minute = time.getUTCMinutes();\nvar second = time.getUTCSeconds();\nmsg.payload = {\n        \"type_of_document\": \"order\",\n        \"tipo_pizza\" : msg.payload.context.pizza,\n        \"numero\" : msg.payload.context.number,\n        \"orario\" : hour*60*60+minute*60+second\n};\nreturn msg;","outputs":1,"noerr":0,"x":578.8443603515625,"y":369.5388946533203,"wires":[["4b96b9cc.e0106"]]},{"id":"c979f02b.ae55e","type":"cloudant in","z":"2efdae27.c34342","name":"","cloudant":"","database":"pizzerianando","service":"FlowBasedExperiments-cloudantNoSQLDB","search":"_idx_","design":"typeofdocumentsearch","index":"typeofdocumentSearch","x":750.8443603515625,"y":258.53887939453125,"wires":[["a71272c8.cc2c38"]]},{"id":"a71272c8.cc2c38","type":"function","z":"2efdae27.c34342","name":"order answer","func":"if(msg.payload.length===0)\n{\n   msg.payload = {   \n  chatId : msg.originalMessage.chat.id,\n  type : \"message\",\n  content : \"Non ci sono ancora ordini registrati. Che pizza vuoi ordinare?\"\n }   \n}\nelse {\nvar answer = \"Al momento hai ordinato\"    \nfor(i=0;i<msg.payload.length;i++) answer = answer +\"\\n\"+msg.payload[i].payload.numero+\" \"+msg.payload[i].payload.tipo_pizza;\n   msg.payload = {   \n  chatId : msg.originalMessage.chat.id,\n  type : \"message\",\n  content : answer\n }\n}\nreturn msg;","outputs":1,"noerr":0,"x":941.8443603515625,"y":258.53887939453125,"wires":[["eae2867a.095228"]]},{"id":"c3f256e7.d7fab8","type":"debug","z":"2efdae27.c34342","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload.intents[0].intent","x":131.84437561035156,"y":574.5388641357422,"wires":[]},{"id":"b69bc8f.6cf76b8","type":"switch","z":"2efdae27.c34342","name":"check delete","property":"payload[0].ok","propertyType":"msg","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":1119.8443603515625,"y":505.5388641357422,"wires":[["a92e91b1.aaf528"],["d361d8b9.baa6e"]]},{"id":"a92e91b1.aaf528","type":"function","z":"2efdae27.c34342","name":"right delete","func":" msg.payload = {   \n  chatId : msg.originalMessage.chat.id,\n  type : \"message\",\n  content : \"Ho cancellato tutti i tuoi ordini, cosa posso fare per te ora?\"\n }\nreturn msg;","outputs":1,"noerr":0,"x":1298.8443603515625,"y":463.5388641357422,"wires":[["eae2867a.095228"]]},{"id":"d361d8b9.baa6e","type":"function","z":"2efdae27.c34342","name":"wrong delete","func":" msg.payload = {   \n  chatId : msg.originalMessage.chat.id,\n  type : \"message\",\n  content : \"Ops...non sono riuscito a cancellare gli ordini, cosa posso fare per te?\"\n }\nreturn msg;","outputs":1,"noerr":0,"x":1322.8443603515625,"y":508.5388641357422,"wires":[["eae2867a.095228"]]},{"id":"bff6d6a5.7cf688","type":"telegram receiver","z":"2d98046b.f3fb14","name":"","bot":"fd083a56.b1bd6","saveDataDir":"","x":100,"y":80,"wires":[["df74345f.1cdd7","5b3e5061.127da8"],[]]},{"id":"df74345f.1cdd7","type":"debug","z":"2d98046b.f3fb14","name":"Test message sent","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":310,"y":40,"wires":[]},{"id":"fe73e627.138fc8","type":"comment","z":"2d98046b.f3fb14","name":"skill for IBM Watson Assistant","info":"{\n  \"name\": \"General purpose\",\n  \"intents\": [\n    {\n      \"intent\": \"General_Negative_Feedback\",\n      \"examples\": [\n        {\n          \"text\": \"Come cavolo posso parlare con una persona?\"\n        },\n        {\n          \"text\": \"Vaffanculo!\"\n        },\n        {\n          \"text\": \"Va a cagare!\"\n        },\n        {\n          \"text\": \"Ti odio.\"\n        },\n        {\n          \"text\": \"Stronzo!\"\n        },\n        {\n          \"text\": \"Sono arrabbiato.\"\n        },\n        {\n          \"text\": \"Smettila!\"\n        },\n        {\n          \"text\": \"Sei scemo.\"\n        },\n        {\n          \"text\": \"Non mi piaci per niente.\"\n        },\n        {\n          \"text\": \"Non ho parole, davvero.\"\n        },\n        {\n          \"text\": \"Non farmi incazzare!\"\n        },\n        {\n          \"text\": \"Mi prendi in giro?\"\n        },\n        {\n          \"text\": \"Mascalzone!\"\n        },\n        {\n          \"text\": \"Ma non scherziamo!\"\n        },\n        {\n          \"text\": \"Mannaggia!\"\n        },\n        {\n          \"text\": \"Impossibile!\"\n        },\n        {\n          \"text\": \"Brutta esperienza.\"\n        },\n        {\n          \"text\": \"Cerca di essere piacevole.\"\n        },\n        {\n          \"text\": \"Che stupido!\"\n        },\n        {\n          \"text\": \"Fottiti!\"\n        }\n      ],\n      \"description\": \"Esprimi feedback sfavorevoli.\"\n    },\n    {\n      \"intent\": \"General_Greetings\",\n      \"examples\": [\n        {\n          \"text\": \"Buonasera, ho qualche domanda da farle, posso ?\"\n        },\n        {\n          \"text\": \"Ti trovo bene, buona sera\"\n        },\n        {\n          \"text\": \"Sto parlando con un computer?\"\n        },\n        {\n          \"text\": \"Salve operatore virtuale\"\n        },\n        {\n          \"text\": \"Salve, l' attivazione del pacchetto messaggi non e' ancora stato effettuato\"\n        },\n        {\n          \"text\": \"Saluti a lei\"\n        },\n        {\n          \"text\": \"Pronto per cominciare\"\n        },\n        {\n          \"text\": \"Non ho chiesto di parlare con un agente. Stavo per dire ciao a te\"\n        },\n        {\n          \"text\": \"Come ti senti?\"\n        },\n        {\n          \"text\": \"Ciao watson fornitore di informazioni\"\n        },\n        {\n          \"text\": \"Mi sei mancato.\"\n        },\n        {\n          \"text\": \"La gente non è maleducata?\"\n        },\n        {\n          \"text\": \"Hai trascorso una buona giornata?\"\n        },\n        {\n          \"text\": \"Ehi tutto a posto?\"\n        },\n        {\n          \"text\": \"Ciao, ho dei problemi di navigazione nel vostro portale\"\n        },\n        {\n          \"text\": \"Ciao gemello informatico\"\n        },\n        {\n          \"text\": \"Ciao, avrei bisogno di una vostra consulenza\"\n        },\n        {\n          \"text\": \"Che succede, fratello\"\n        },\n        {\n          \"text\": \"Buon pomeriggio bot!\"\n        },\n        {\n          \"text\": \"Buongiorno Agent!\"\n        }\n      ],\n      \"description\": \"Saluta il bot.\"\n    },\n    {\n      \"intent\": \"General_Human_or_Bot\",\n      \"examples\": [\n        {\n          \"text\": \"Dietro un bot c'è un essere umano?\"\n        },\n        {\n          \"text\": \"Vorrei essere messo in contatto con un essere umano.\"\n        },\n        {\n          \"text\": \"Sto parlando con Watson?\"\n        },\n        {\n          \"text\": \"Sto parlando con un essere umano oppure con un bot?\"\n        },\n        {\n          \"text\": \"Sei vero?\"\n        },\n        {\n          \"text\": \"Sei un essere umano oppure un bot?\"\n        },\n        {\n          \"text\": \"Sarai onesto con me?\"\n        },\n        {\n          \"text\": \"Preferisco essere connesso con una persona.\"\n        },\n        {\n          \"text\": \"Potresti passarmi una persona dal mondo reale?\"\n        },\n        {\n          \"text\": \"Mi passi un agente che non sia virtuale?\"\n        },\n        {\n          \"text\": \"In quanti siete?\"\n        },\n        {\n          \"text\": \"In che tipo di relazione siamo, bot?\"\n        },\n        {\n          \"text\": \"Esisti solo nel mondo virtuale?\"\n        },\n        {\n          \"text\": \"Esisti in carne ed ossa?\"\n        },\n        {\n          \"text\": \"E' la comunicazione con bot?\"\n        },\n        {\n          \"text\": \"Dimmi tre cose di te.\"\n        },\n        {\n          \"text\": \"Chi è questo?\"\n        },\n        {\n          \"text\": \"Chi sei?\"\n        },\n        {\n          \"text\": \"Cosa provi parlando con me?\"\n        },\n        {\n          \"text\": \"Di dove sei?\"\n        }\n      ],\n      \"description\": \"Chiedi se stai parlando con un umano o un robot.\"\n    },\n    {\n      \"intent\": \"General_Security_Assurance\",\n      \"examples\": [],\n      \"description\": \"Esprimi preoccupazioni sulla sicurezza del bot.\"\n    },\n    {\n      \"intent\": \"General_Ending\",\n      \"examples\": [\n        {\n          \"text\": \"Va bene, grazie mille allora\"\n        },\n        {\n          \"text\": \"Stammi bene.\"\n        },\n        {\n          \"text\": \"Addio!\"\n        },\n        {\n          \"text\": \"Bene, abbiamo fatto tutto ciò che mi serviva.\"\n        },\n        {\n          \"text\": \"ciao watson ti auguro una giornata bellissima\"\n        },\n        {\n          \"text\": \"Ehi penso che hai risolto il mio problema grazie\"\n        },\n        {\n          \"text\": \"Grazie di avermi aiutato. Ciao\"\n        },\n        {\n          \"text\": \"Grazie di tutto, è stato molto di aiuto\"\n        },\n        {\n          \"text\": \"Grazie watson parliamo dopo per quanto riguarda il pagamento della fattura\"\n        },\n        {\n          \"text\": \"Me ne sto andando.\"\n        },\n        {\n          \"text\": \"Mi è piaciuto cooperare con te.\"\n        },\n        {\n          \"text\": \"Non vedo l'ora di parlarti la prossima volta.\"\n        },\n        {\n          \"text\": \"Pausa\"\n        },\n        {\n          \"text\": \"smetti questa sessione adesso\"\n        },\n        {\n          \"text\": \"sono contento che non devo parlare con gli umani ciao watson\"\n        },\n        {\n          \"text\": \"Spero di risentirla presto\"\n        },\n        {\n          \"text\": \"Sono curiso se ci sentiamo ancora.\"\n        }\n      ],\n      \"description\": \"Termina la conversazione.\"\n    },\n    {\n      \"intent\": \"General_Agent_Capabilities\",\n      \"examples\": [\n        {\n          \"text\": \"Come posso usare le funzionalità demo dell'agente?\"\n        },\n        {\n          \"text\": \"Posso visualizzare metriche settimanali\"\n        },\n        {\n          \"text\": \"Posso vedere le domande più frequenti?\"\n        },\n        {\n          \"text\": \"Mi piacerebbe sapere che tipo di problemi si possono risolvere per me.\"\n        },\n        {\n          \"text\": \"Come posso creare una conversazione qui?\"\n        },\n        {\n          \"text\": \"Ciao, su quali argomenti puoi aiutarmi?\"\n        },\n        {\n          \"text\": \"Ciao. Potresti darmi un elenco di argomenti con cui puoi aiutarmi per favore?\"\n        },\n        {\n          \"text\": \"Ciao, come puoi essermi d'aiuto oggi?\"\n        },\n        {\n          \"text\": \"che tipo di assistenza mi puoi dare?\"\n        },\n        {\n          \"text\": \"Ho qualche domanda, e ho bisognoso di assistenza ... posso chiedere aiuto?\"\n        },\n        {\n          \"text\": \"Ho molte domande, può rispondere alle domande sui suoi servizi\"\n        },\n        {\n          \"text\": \"Fornisci assistenza generale? Non so cosa posso chiederti\"\n        },\n        {\n          \"text\": \"E' possibile ricevere un qualche tipo d'aiuto?\"\n        },\n        {\n          \"text\": \"Diavolo! Mi piacerebbe sapere che tipo di domande puoi rispondere per me.\"\n        },\n        {\n          \"text\": \"Quali sono i comandi di aiuto?\"\n        },\n        {\n          \"text\": \"Senti puoi dirmi come puoi aiutarmi per favore?\"\n        },\n        {\n          \"text\": \"Voglio avere informazioni su una domanda frequente\"\n        },\n        {\n          \"text\": \"Puoi dirmi i tipi di cose con cui puoi aiutarmi?\"\n        },\n        {\n          \"text\": \"Puoi aspettare solo un attimo per favore?\"\n        }\n      ],\n      \"description\": \"Richiedi le funzionalità del bot.\"\n    },\n    {\n      \"intent\": \"traduci\",\n      \"examples\": [\n        {\n          \"text\": \"puoi tradurmi questo?\"\n        },\n        {\n          \"text\": \"sai come si dice\"\n        },\n        {\n          \"text\": \"me lo dici in questa lingua?\"\n        },\n        {\n          \"text\": \"come si traduce?\"\n        },\n        {\n          \"text\": \"traduci\"\n        },\n        {\n          \"text\": \"come si dice\"\n        },\n        {\n          \"text\": \"traduci in spagnolo\"\n        },\n        {\n          \"text\": \"puoi tradurre dall'italiano all'inglese?\"\n        }\n      ],\n      \"description\": \"richiesta di tradurre una frase\"\n    },\n    {\n      \"intent\": \"General_Positive_Feedback\",\n      \"examples\": [\n        {\n          \"text\": \"Complimenti vivissimi!\"\n        },\n        {\n          \"text\": \"Bella storia!\"\n        },\n        {\n          \"text\": \"Benissimo!\"\n        },\n        {\n          \"text\": \"Complimenti!\"\n        },\n        {\n          \"text\": \"Grazie mille!\"\n        },\n        {\n          \"text\": \"Magnifico!\"\n        },\n        {\n          \"text\": \"Mi hai aiutato tantissimo.\"\n        },\n        {\n          \"text\": \"Mi hai colpito.\"\n        },\n        {\n          \"text\": \"Mi piace veramente.\"\n        },\n        {\n          \"text\": \"Non vedo l'ora di collaborare di nuovo con te.\"\n        },\n        {\n          \"text\": \"Sei bravissimo! Non posso crederci.\"\n        },\n        {\n          \"text\": \"Sei in gamba, davvero!\"\n        },\n        {\n          \"text\": \"Sei saggio.\"\n        },\n        {\n          \"text\": \"Sei stato bravo, sul serio.\"\n        },\n        {\n          \"text\": \"Sei un genio.\"\n        },\n        {\n          \"text\": \"Sono affascinato!\"\n        },\n        {\n          \"text\": \"Sono contento.\"\n        },\n        {\n          \"text\": \"Sono soddisfatto.\"\n        },\n        {\n          \"text\": \"stupendo!\"\n        },\n        {\n          \"text\": \"Tante grazie!\"\n        }\n      ],\n      \"description\": \"Esprimi un sentimento positivo o gratitudine.\"\n    },\n    {\n      \"intent\": \"General_About_You\",\n      \"examples\": [\n        {\n          \"text\": \"Su quale sistema operativo è il bot?\"\n        },\n        {\n          \"text\": \"Sei una dashboard\"\n        },\n        {\n          \"text\": \"Riesci a descriverti?\"\n        },\n        {\n          \"text\": \"puoi scoprire la mia ubicazione watson\"\n        },\n        {\n          \"text\": \"Non capisco come funziona il vostro sito, mi puoi aiutare?\"\n        },\n        {\n          \"text\": \"Mi dici il tuo nome?\"\n        },\n        {\n          \"text\": \"Il buon Watson è troppo intelligente\"\n        },\n        {\n          \"text\": \"Informazioni tecniche su agente virtuale watson\"\n        },\n        {\n          \"text\": \"Aiutami a capire come verificare la tua funzionalità\"\n        },\n        {\n          \"text\": \"Che differenza c'è con altre chat?\"\n        },\n        {\n          \"text\": \"Vorrei sapere come creare un chat bot\"\n        },\n        {\n          \"text\": \"Sei un rappresentante ufficiale della conversazione?\"\n        },\n        {\n          \"text\": \"Diventiamo amici?\"\n        },\n        {\n          \"text\": \"E per quel che riguarda te? Cosa si dice?\"\n        },\n        {\n          \"text\": \"Esisti davvero oppure sei solo virtuale?\"\n        },\n        {\n          \"text\": \"Hai un nomignolo?\"\n        },\n        {\n          \"text\": \"Ho bisogno di informazioni sul prezzo di Watson\"\n        }\n      ],\n      \"description\": \"Richiedi attributi personali generici.\"\n    },\n    {\n      \"intent\": \"lingueconosciute\",\n      \"examples\": [\n        {\n          \"text\": \"cosa sei in grado di tradurre?\"\n        },\n        {\n          \"text\": \"che traduzioni posso fare?\"\n        },\n        {\n          \"text\": \"quante lingue conosci?\"\n        },\n        {\n          \"text\": \"oltre all'italiano quali lingue conosci?\"\n        },\n        {\n          \"text\": \"quali lingue sai tradurre?\"\n        },\n        {\n          \"text\": \"quali lingue parli?\"\n        }\n      ],\n      \"description\": \"per capire in quanti modi è possibile tradurre\"\n    },\n    {\n      \"intent\": \"General_Connect_to_Agent\",\n      \"examples\": [\n        {\n          \"text\": \"Sto cercando di trovare una persona sul telefono, non una macchina automatica. Come posso parlare con una persona al supporto clienti? grazie\"\n        },\n        {\n          \"text\": \"Esiste un numero del servizio clienti della compagnia telefonica che posso usare per parlare direttamente con un operatore?\"\n        },\n        {\n          \"text\": \"Come posso saltare il menu registrato e andare dritto ad una persona viva?\"\n        },\n        {\n          \"text\": \"Collegarmi a un operatore vivente per favore.\"\n        },\n        {\n          \"text\": \"Collegami a un operatore\"\n        },\n        {\n          \"text\": \"Ciao. Potresti passare la mia chiamata a un operatore in carne e ossa per favore? Vorrei parlare direttamente con un essere umano.\"\n        },\n        {\n          \"text\": \"Voglio parlare della gestione del profilo con un agente\"\n        },\n        {\n          \"text\": \"Voglio parlare con un operatore al telefono\"\n        },\n        {\n          \"text\": \"Voglio parlare con un addetto all'assistenza clienti.\"\n        },\n        {\n          \"text\": \"Voglio che mi mettiate in contatto con un operatore che mi può aiutare, non con una macchina\"\n        },\n        {\n          \"text\": \"Puoi solamente mandarmi un numero di telefono per parlare con un rappresentante commerciale umano?\"\n        },\n        {\n          \"text\": \"Posso parlare con un operatore in carne e ossa?\"\n        },\n        {\n          \"text\": \"Posso avere i contatti per parlare con un operatore attivo?\"\n        },\n        {\n          \"text\": \"Per favore posso parlare con un consulente della mia bolletta\"\n        },\n        {\n          \"text\": \"Per favore mi collega ad un agente umano che parla inglese bene.\"\n        },\n        {\n          \"text\": \"Per favore aiutarmi a raggiungere un agente\"\n        },\n        {\n          \"text\": \"Per favore aiutarmi a connettersi ad un agente\"\n        },\n        {\n          \"text\": \"Ho provato a compilare il modulo online, ma ci vogliono giorni. Voglio parlare con qualcuno che può farlo adesso\"\n        },\n        {\n          \"text\": \"Ho bisogno di parlare con una persona reale piuttosto che comunicare con un sistema di risposta automatica, per favore.\"\n        },\n        {\n          \"text\": \"Fammi parlare con un essere umano per favore\"\n        }\n      ],\n      \"description\": \"Richiedi un agente umano.\"\n    },\n    {\n      \"intent\": \"General_Jokes\",\n      \"examples\": [\n        {\n          \"text\": \"Cosa mi racconti di divertente?\"\n        },\n        {\n          \"text\": \"Che mi racconti di bello?\"\n        },\n        {\n          \"text\": \"Ci mettiamo a ballare per trovare la soluzione?\"\n        },\n        {\n          \"text\": \"C'era una volta un bot...\"\n        },\n        {\n          \"text\": \"C'era una volta un problema con la connessione... Racconta una favola sulla rete.\"\n        },\n        {\n          \"text\": \"Conosci quella barzelletta?\"\n        },\n        {\n          \"text\": \"Vuoi cantarmi la soluzione?\"\n        },\n        {\n          \"text\": \"Un bot con I capelli rossi...\"\n        },\n        {\n          \"text\": \"Ti piace scherzare?\"\n        },\n        {\n          \"text\": \"Ti diverti ogni tanto?\"\n        },\n        {\n          \"text\": \"Sei un bot divertente?\"\n        },\n        {\n          \"text\": \"Sei tu la barzelletta?\"\n        },\n        {\n          \"text\": \"Scrivimi la soluzione nei  versi.\"\n        },\n        {\n          \"text\": \"Mi racconti una barzelletta?\"\n        },\n        {\n          \"text\": \"Mi annoio.\"\n        },\n        {\n          \"text\": \"Ma la nostra conversazione è uno scherzo?\"\n        },\n        {\n          \"text\": \"Hai il senso di umorismo?\"\n        },\n        {\n          \"text\": \"Giochiamo finché non troviamo la soluzione?\"\n        },\n        {\n          \"text\": \"E' divertente la vita virtuale?\"\n        },\n        {\n          \"text\": \"Dimmi una barzelletta.\"\n        }\n      ],\n      \"description\": \"Richiedi una battuta.\"\n    }\n  ],\n  \"entities\": [\n    {\n      \"entity\": \"lingue\",\n      \"values\": [\n        {\n          \"type\": \"synonyms\",\n          \"value\": \"Italiano\",\n          \"synonyms\": []\n        },\n        {\n          \"type\": \"synonyms\",\n          \"value\": \"Inglese\",\n          \"synonyms\": []\n        },\n        {\n          \"type\": \"synonyms\",\n          \"value\": \"Francese\",\n          \"synonyms\": []\n        },\n        {\n          \"type\": \"synonyms\",\n          \"value\": \"Spagnolo\",\n          \"synonyms\": []\n        },\n        {\n          \"type\": \"synonyms\",\n          \"value\": \"Arabo\",\n          \"synonyms\": []\n        },\n        {\n          \"type\": \"synonyms\",\n          \"value\": \"Cinese\",\n          \"synonyms\": []\n        },\n        {\n          \"type\": \"synonyms\",\n          \"value\": \"Tedesco\",\n          \"synonyms\": []\n        }\n      ],\n      \"fuzzy_match\": true\n    }\n  ],\n  \"language\": \"it\",\n  \"metadata\": {\n    \"api_version\": {\n      \"major_version\": \"v1\",\n      \"minor_version\": \"2018-09-20\"\n    }\n  },\n  \"description\": \"\",\n  \"dialog_nodes\": [\n    {\n      \"type\": \"standard\",\n      \"title\": \"Fai la traduzione\",\n      \"output\": {\n        \"text\": {\n          \"values\": [],\n          \"selection_policy\": \"sequential\"\n        }\n      },\n      \"parent\": \"node_3_1542016086885\",\n      \"context\": {\n        \"action\": \"traduci\"\n      },\n      \"metadata\": {},\n      \"conditions\": \"true\",\n      \"dialog_node\": \"node_4_1542016484444\"\n    },\n    {\n      \"type\": \"standard\",\n      \"title\": \"Da questa lingua\",\n      \"output\": {\n        \"text\": {\n          \"values\": [\n            \"In quale lingua vuoi tradurre?\"\n          ],\n          \"selection_policy\": \"sequential\"\n        }\n      },\n      \"parent\": \"node_1_1542015863127\",\n      \"context\": {\n        \"source\": \"@lingue\"\n      },\n      \"metadata\": {},\n      \"conditions\": \"@lingue\",\n      \"dialog_node\": \"node_2_1542015940313\"\n    },\n    {\n      \"type\": \"standard\",\n      \"title\": \"Fai la traduzione\",\n      \"output\": {\n        \"text\": {\n          \"values\": [],\n          \"selection_policy\": \"sequential\"\n        }\n      },\n      \"parent\": \"node_5_1542029192713\",\n      \"context\": {\n        \"action\": \"identifica\"\n      },\n      \"metadata\": {},\n      \"conditions\": \"true\",\n      \"dialog_node\": \"node_6_1542030847780\"\n    },\n    {\n      \"type\": \"standard\",\n      \"title\": \"a questa lingua\",\n      \"output\": {\n        \"text\": {\n          \"values\": [\n            \"Quale testo vuoi tradurre?\"\n          ]\n        }\n      },\n      \"parent\": \"node_2_1542015940313\",\n      \"context\": {\n        \"destination\": \"@lingue\"\n      },\n      \"metadata\": {},\n      \"conditions\": \"@lingue\",\n      \"dialog_node\": \"node_3_1542016086885\"\n    },\n    {\n      \"type\": \"standard\",\n      \"title\": \"Cosa conosco\",\n      \"output\": {\n        \"text\": {\n          \"values\": [\n            \"Al momento posso tradurre in Italiano, Inglese e Tedesco.\"\n          ],\n          \"selection_policy\": \"sequential\"\n        }\n      },\n      \"metadata\": {},\n      \"conditions\": \"#lingueconosciute\",\n      \"dialog_node\": \"node_8_1542033374826\",\n      \"previous_sibling\": \"node_1_1542015863127\"\n    },\n    {\n      \"type\": \"standard\",\n      \"title\": \"In altri casi\",\n      \"output\": {\n        \"text\": {\n          \"values\": [\n            \"Non ho capito. Puoi riformulare la frase?\",\n            \"Puoi ripetere usando altre parole? Non ho capito.\",\n            \"Non ho capito cosa mi hai detto.\"\n          ],\n          \"selection_policy\": \"sequential\"\n        }\n      },\n      \"metadata\": {},\n      \"conditions\": \"anything_else\",\n      \"dialog_node\": \"In altri casi\",\n      \"previous_sibling\": \"node_8_1542033374826\"\n    },\n    {\n      \"type\": \"standard\",\n      \"title\": \"Traduci\",\n      \"output\": {\n        \"text\": {\n          \"values\": [\n            \"Da quale lingua vuoi tradurre?\"\n          ],\n          \"selection_policy\": \"sequential\"\n        }\n      },\n      \"metadata\": {},\n      \"conditions\": \"#traduci\",\n      \"dialog_node\": \"node_1_1542015863127\",\n      \"previous_sibling\": \"node_5_1542029192713\"\n    },\n    {\n      \"type\": \"standard\",\n      \"title\": \"Saluto\",\n      \"output\": {\n        \"text\": {\n          \"values\": [\n            \"Ciao, sono un agente virtuale esperto nelle traduzioni, cosa posso tradurre per te?\"\n          ],\n          \"selection_policy\": \"sequential\"\n        }\n      },\n      \"metadata\": {},\n      \"conditions\": \"#General_Greetings\",\n      \"digress_in\": \"does_not_return\",\n      \"dialog_node\": \"node_7_1542032907976\",\n      \"previous_sibling\": \"Benvenuto\"\n    },\n    {\n      \"type\": \"standard\",\n      \"title\": \"Traduci con lingua\",\n      \"output\": {\n        \"text\": {\n          \"values\": [\n            \"Certo! Che testo vuoi tradurre?\"\n          ],\n          \"selection_policy\": \"sequential\"\n        }\n      },\n      \"context\": {\n        \"lingue\": \"<? entities[\\\"lingue\\\"] ?>\"\n      },\n      \"metadata\": {},\n      \"conditions\": \"#traduci && @lingue\",\n      \"digress_in\": \"does_not_return\",\n      \"dialog_node\": \"node_5_1542029192713\",\n      \"previous_sibling\": \"node_7_1542032907976\"\n    },\n    {\n      \"type\": \"standard\",\n      \"title\": \"Benvenuto\",\n      \"output\": {\n        \"text\": {\n          \"values\": [\n            \"Salve. Come posso aiutarti?\"\n          ],\n          \"selection_policy\": \"sequential\"\n        }\n      },\n      \"metadata\": {},\n      \"conditions\": \"welcome\",\n      \"dialog_node\": \"Benvenuto\"\n    }\n  ],\n  \"workspace_id\": \"c4b0da07-8d7a-475f-a86a-071160de5d1a\",\n  \"counterexamples\": [],\n  \"learning_opt_out\": false,\n  \"status\": \"Available\"\n}","x":160,"y":460,"wires":[]},{"id":"5b3e5061.127da8","type":"function","z":"2d98046b.f3fb14","name":"Prepare for conversation","func":"msg.chatId = msg.payload.chatId;\nmsg.payload = msg.payload.content;\nreturn msg;","outputs":1,"noerr":0,"x":310,"y":120,"wires":[["4905870b.529538"]]},{"id":"4905870b.529538","type":"watson-conversation-v1","z":"2d98046b.f3fb14","name":"General","workspaceid":"c4b0da07-8d7a-475f-a86a-071160de5d1a","multiuser":false,"context":true,"empty-payload":false,"default-endpoint":false,"service-endpoint":"https://gateway-fra.watsonplatform.net/assistant/api","timeout":"","optout-learning":false,"x":260,"y":180,"wires":[["9fbc774c.4c92b"]]},{"id":"9fbc774c.4c92b","type":"switch","z":"2d98046b.f3fb14","name":"","property":"payload.context.action","propertyType":"msg","rules":[{"t":"eq","v":"traduci","vt":"str"},{"t":"eq","v":"identifica","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":3,"x":250,"y":240,"wires":[["1de62a08.c885d6","572d7fad.198268"],["644a55bf.976444","39e848a1.2ea998"],["d2b6aa51.ea6238"]]},{"id":"d2b6aa51.ea6238","type":"function","z":"2d98046b.f3fb14","name":"Prepare for telegram","func":"msg.payload = {\n    chatId : msg.chatId,\n    type : \"message\",\n    content : msg.payload.output.text[0]};\nreturn msg;","outputs":1,"noerr":0,"x":480,"y":600,"wires":[["cb7460ed.374f2"]]},{"id":"cb7460ed.374f2","type":"telegram sender","z":"2d98046b.f3fb14","name":"","bot":"fd083a56.b1bd6","x":940,"y":600,"wires":[[]]},{"id":"644a55bf.976444","type":"debug","z":"2d98046b.f3fb14","name":"Test identifica context variable","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":510,"y":320,"wires":[]},{"id":"1de62a08.c885d6","type":"debug","z":"2d98046b.f3fb14","name":"Test traduci context variable","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":500,"y":220,"wires":[]},{"id":"572d7fad.198268","type":"function","z":"2d98046b.f3fb14","name":"Prepare translation","func":"msg.srclang = getLanguage(msg.payload.context.source);\nmsg.destlang = getLanguage(msg.payload.context.destination);\nmsg.payload = msg.payload.input.text;\n\nreturn msg;\n\nfunction getLanguage(lang){\n    switch (lang){\n        case \"Tedesco\":\n            return \"de\";\n        case \"Inglese\":\n            return \"en\";\n    }\n    return \"it\";\n}","outputs":1,"noerr":0,"x":470,"y":260,"wires":[["eca32f10.585a68"]]},{"id":"f3866b00.efda","type":"function","z":"2d98046b.f3fb14","name":"Prepare for telegram","func":"msg.payload = {\n    chatId : msg.chatId,\n    type : \"message\",\n    content : msg.payload};\nreturn msg;","outputs":1,"noerr":0,"x":940,"y":260,"wires":[["cb7460ed.374f2"]]},{"id":"eca32f10.585a68","type":"watson-translator","z":"2d98046b.f3fb14","name":"","action":"translate","basemodel":"en-tr","domain":"general","srclang":"en","destlang":"tr","password":"1n7ckNjSB7QBpUfYRdc2mwvHe-8c1ZIxoPmopbe2leVg","apikey":"1n7ckNjSB7QBpUfYRdc2mwvHe-8c1ZIxoPmopbe2leVg","custom":"","domainhidden":"general","srclanghidden":"en","destlanghidden":"tr","basemodelhidden":"","customhidden":"","filetype":"forcedglossary","trainid":"","lgparams2":true,"neural":false,"default-endpoint":false,"service-endpoint":"https://gateway-fra.watsonplatform.net/language-translator/api","x":710,"y":260,"wires":[["f3866b00.efda","78b7fb5c.85b2c4"]]},{"id":"78b7fb5c.85b2c4","type":"function","z":"2d98046b.f3fb14","name":"Clear assistant context","func":"msg.payload = \"reset\";\nmsg.params = {\n    context: {}\n}\nreturn msg;","outputs":1,"noerr":0,"x":720,"y":160,"wires":[["ba0b35ae.e55488"]]},{"id":"ba0b35ae.e55488","type":"watson-conversation-v1","z":"2d98046b.f3fb14","name":"General","workspaceid":"c4b0da07-8d7a-475f-a86a-071160de5d1a","multiuser":false,"context":true,"empty-payload":false,"default-endpoint":false,"service-endpoint":"https://gateway-fra.watsonplatform.net/assistant/api","timeout":"","optout-learning":false,"x":680,"y":120,"wires":[[]]},{"id":"39e848a1.2ea998","type":"function","z":"2d98046b.f3fb14","name":"Prepare identification","func":"var lingue = [];\nfor (var i = 0; i < msg.payload.context.lingue.length; i++) { \n    lingue.push(getLanguage(msg.payload.context.lingue[i].value));\n    //lingue.push(msg.payload.context.lingue.value);\n}\nmsg.lingue = lingue;\nmsg.payload = msg.payload.input.text;\n\nreturn msg;\n\nfunction getLanguage(lang){\n    switch (lang){\n        case \"Tedesco\":\n            return \"de\";\n        case \"Inglese\":\n            return \"en\";\n    }\n    return \"it\";\n}","outputs":1,"noerr":0,"x":480,"y":380,"wires":[["eab58231.599a4"]]},{"id":"eab58231.599a4","type":"watson-language-translator-identify","z":"2d98046b.f3fb14","name":"","default-endpoint":false,"service-endpoint":"https://gateway-fra.watsonplatform.net/language-translator/api","x":470,"y":440,"wires":[["210fee70.4153c2"]]},{"id":"210fee70.4153c2","type":"function","z":"2d98046b.f3fb14","name":"Prepare translation","func":"msg.srclang = msg.lang.language;\nfor(var i=0;i<msg.lingue.length;i++)\nif(msg.lingue[i]!=msg.lang.language) msg.destlang=msg.lingue[i];\nmsg.payload = msg.payload;\n\nreturn msg;","outputs":1,"noerr":0,"x":470,"y":500,"wires":[["eca32f10.585a68"]]},{"id":"29968480.9abbfc","type":"comment","z":"2d98046b.f3fb14","name":"README","info":"Use Watsonexperiments bot\nThis bot is not multi-user bot.\nTry it one by one","x":100,"y":380,"wires":[]}]
